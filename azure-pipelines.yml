trigger:
- master

pr:
- master

stages:

- stage: build

  variables:
    nodeVersion: 12.x
    appDir: fur2feathers

  jobs:

  - job: build

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: 'docker-compose.prod.yml'
        action: 'Build services'
      displayName: docker-compose build

  - job: test

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: node $(nodeVersion)

    - script: npm ci
      workingDirectory: $(appDir)
      displayName: npm install

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'f2f-ng'
        organization: 'jhbui1'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '2002-feb24-net_Fur2FeathersNg-project3'
        cliProjectName: 'p3-f2f-ng'
        cliSources: '$(appDir)/src'
        extraProperties: |
          sonar.coverage.exclusions=**/*.spec.ts
          sonar.typescript.lcov.reportPaths=$(appDir)/coverage/$(appDir)/lcov.info
      displayName: sonarcloud analysis prepare
    

    - script: npx ng test --browsers ChromeHeadless --no-watch --code-coverage
      workingDirectory: $(appDir)
      displayName: ng test

    # - script: npm run lint
    #   workingDirectory: $(appDir)
    #   displayName: ng lint

    - task: SonarCloudAnalyze@1
      displayName: sonarcloud analysis run

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: sonarcloud results build publish

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: build

  jobs:

  - job: push

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: DockerCompose@0
      displayName: docker-compose build
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: 'docker-compose.prod.yml'
        action: 'Build services'

    - task: DockerCompose@0
      displayName: docker-compose push
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'jhbui1'
        dockerComposeFile: 'docker-compose.prod.yml'
        action: 'Push services'


    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'Azure subscription 1 (0331d11f-08e8-4a46-91f1-7c02b4a66c26)'
        appName: 'fur2feathers'
        multicontainerConfigFile: 'docker-compose.prod.yml'
      displayName: app service deploy
      
    - task: PublishPipelineArtifact@1
      displayName: k8s manifest publish
      inputs:
        targetPath: 'k8s'
        artifact: 'k8s'
        publishLocation: 'pipeline'

  - deployment: deploy_dev
    dependsOn: push

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - task: KubernetesManifest@0
            displayName: kubectl apply
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'f2f-k8s-backend'
              namespace: 'default'
              manifests: '$(Pipeline.Workspace)/k8s/**/*.yml'

          - task: Kubernetes@1
            displayName: kubectl rollout restart
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'f2f-k8s-backend'
              namespace: 'default'
              command: 'rollout'
              useConfigurationFile: true
              configuration: '$(Pipeline.Workspace)/k8s/deployment'
              arguments: 'restart'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'

